<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2015/07/30 on feedtailor Inc. スタッフブログ</title>
    <link>http://staff.feedtailor.jp/archives/2015/07/30/</link>
    <description>Recent content in 2015/07/30 on feedtailor Inc. スタッフブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 30 Jul 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://staff.feedtailor.jp/archives/2015/07/30/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>超聖域：そら案内</title>
      <link>http://staff.feedtailor.jp/2015/07/30/950</link>
      <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://staff.feedtailor.jp/2015/07/30/950</guid>
      <description>&lt;p&gt;こんにちは、そら案内担当のitokです。&lt;/p&gt;

&lt;p&gt;超聖域ということで私が選んだ題材は「そら案内」でした。WWDCで発表されたiOS9 / watchOS2 / Swift2.0、これらをふんだんに使った新しい「そら案内」を、ということで調査含めてがっつりと時間を使わせてもらいました。&lt;/p&gt;

&lt;p&gt;ものすごくざっくりというともともとiOS6で書かれていた現行のそら案内をiOS8で、そしてもちろんSwift2.0で書き直そうという取り組みです。&lt;/p&gt;

&lt;p&gt;さて、そら案内は予報を取り扱う共通ライブラリ的なものがありまして、それでもってiOS/Mac版、あるいはほかのそらシリーズのアプリとの共通化を図っています。&lt;/p&gt;

&lt;p&gt;というわけで、まずはその部分の作り直しです。もともと後付けの機能やらなにやらでごちゃごちゃしてきたところもあって、そのあたりをすっきりとさせました。そのあたりはAndroid / Windows版を新規に作ってきた上でのフィードバックって感じですね。&lt;/p&gt;

&lt;p&gt;データベースにはRealmを採用し、予報のパースにはHimotokiを。JSONマッパーは初めて使う（面倒そうで躊躇していた）のですが、定義さえしてしまえばすごくすっきりしたので大満足です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://realm.io/&#34; target=&#34;_blank&#34;&gt;Realm is a mobile database: a replacement for SQLite &amp;amp; Core Data&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ikesyo/Himotoki&#34; target=&#34;_blank&#34;&gt;ikesyo/Himotoki · GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;通信部分はもともとAFNetworkingだったんですが、そもそも単純なGETくらいしか使っていないので、素でNSURLSessionを使うことにしました。&lt;/p&gt;

&lt;p&gt;日程の前半を使って共通部分を書き直し、後半でちょっとした動作デモでも、、、と思ってwatchOS2に手を出したのですが・・・&lt;/p&gt;

&lt;p&gt;当時はそもそもCocoaPodsがwatchOS2に対応していなかったり（週をまたぐと対応されていた）、ほかのライブラリ群が対応していなかったりということであえなく断念。このあたりがβ環境を突き進んでいるときの弊害ですね。仕方ない。（2015.7.29時点ではおおむね対応されているようです。ライブラリ作者の皆様ありがとうございます）&lt;/p&gt;

&lt;p&gt;そのかわりといってはなんですが、watchOS2のcomplicationまわりをいろいろと触っていまして、各CLKComplicationTemplateで必要とされているアイコンのサイズが複雑過ぎたので一覧を作ってみました。参考までにどうぞ。（外にお見せできる成果はこのくらいなんで）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://staff.feedtailor.jp/images/2015/07/CLKComplication_list.png&#34;&gt;&lt;img src=&#34;http://staff.feedtailor.jp/images/2015/07/CLKComplication_list-300x174.png&#34; alt=&#34;CLKComplication_list&#34; width=&#34;300&#34; height=&#34;174&#34; class=&#34;alignnone size-medium wp-image-954&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;全体として、こういう大がかりな作り込みはまとまった時間をしっかり使わないと難しい（いつものように複数プロジェクトを平行して作業していると難しい）ので、ちょうどいい機会でした。1本に集中しきれなかったのは残念でしたがそれはそれとしてそれだけ手間取ることができたのも時間があったからというところもありますし、もし次の機会があればそれに生かしたいと思います。&lt;/p&gt;

&lt;p&gt;さてさて、次期バージョンのそら案内、iOS9に間に合わせるべく熱意作業中ですのでお楽しみに。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>