<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2015/08/10 on feedtailor Inc. スタッフブログ</title>
    <link>http://staff.feedtailor.jp/archives/2015/08/10/</link>
    <description>Recent content in 2015/08/10 on feedtailor Inc. スタッフブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 10 Aug 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://staff.feedtailor.jp/archives/2015/08/10/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>超聖域：JavaFXのGradleビルド</title>
      <link>http://staff.feedtailor.jp/2015/08/10/1013</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://staff.feedtailor.jp/2015/08/10/1013</guid>
      <description>

&lt;p&gt;営業兼開発の tamaoki (&lt;a href=&#34;https://twitter.com/t0shiya&#34;&gt;@t0shiya&lt;/a&gt;) です。&lt;/p&gt;

&lt;p&gt;7月1日〜7日まで弊社の９周年記念(?)として&lt;a href=&#34;http://feedtailor.jp/wp/?p=14425&#34;&gt;「超聖域」&lt;/a&gt;なるイベントが開催されました。&lt;/p&gt;

&lt;p&gt;「超聖域」っていうのは、期間中は通常業務をやらなくていいので自由に作りたいものを作ってねー、というもので、私は対外的な業務があるので100%開発とは行かなかったのですが、2日間くらいはがっつり開発できました。&lt;/p&gt;

&lt;p&gt;で、何をやったかというと以前から着手していた &lt;a href=&#34;http://www.syncnel.biz&#34;&gt;SYNCNEL&lt;/a&gt; のJavaFXアプリケーションのGradleビルドスクリプトを書いてました。&lt;/p&gt;

&lt;h1 id=&#34;javafx&#34;&gt;JavaFX&lt;/h1&gt;

&lt;p&gt;JavaFXとはJavaのGUIツールキットでJDK8からは標準で提供されています。&lt;/p&gt;

&lt;p&gt;SYNCNELでは以前からWindows専用アプリケーションをいくつかご提供していたのですが、個人的に「Macでも使いたい」とか「Java8の新機能（ラムダ式とか）を使ってみたい」との思いから（主に後者）、JavaFXでデスクトップアプリを作り始めました。&lt;/p&gt;

&lt;p&gt;JavaFXではSelf-Containedなアプリ（ルー語みたい？）、つまりJavaの実行環境を内包した単独実行できるアプリケーションを作る機能が用意されていて、比較的簡単にデスクトップアプリが作成できます。&lt;/p&gt;

&lt;p&gt;簡単とは言いましたが、はまるポイントは幾つもあったので、今回はその内のビルドスクリプトについてご紹介します。&lt;/p&gt;

&lt;h1 id=&#34;gradleビルドスクリプト&#34;&gt;Gradleビルドスクリプト&lt;/h1&gt;

&lt;p&gt;アプリ自体はコードが書ければできあがるんですが、それを公開するとなるといろいろやることがあります。&lt;/p&gt;

&lt;p&gt;一般の方に使っていただくにはインストーラを用意したり、コードにサインしたり、・・・・・・。&lt;/p&gt;

&lt;p&gt;JavaFXアプリをビルドするための方法は標準でOracleから提供されているんですが、これがなぜかAntのタスクで。&lt;/p&gt;

&lt;p&gt;既にあるGradleスクリプトから外部タスクとして実行する手もあったんですがなんか気持ちよくないので、Gradleのタスクとして直接実行するようにしました。&lt;/p&gt;

&lt;p&gt;JARファイル作成までは探せば情報があるんですが、その先がなくて、試行錯誤の末、できあがったのが以下の build.gradle です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import groovy.xml.NamespaceBuilder

apply plugin: &#39;java&#39;
apply plugin: &#39;idea&#39;

version = &#39;アプリのバージョン&#39;

def vender_name    = &#39;ベンダー名&#39;
def jar_name       = &#39;JARファイル名&#39;
def app_name       = &#39;アプリ名&#39;
def app_width      = &#39;アプリのウィンドウ幅&#39;
def app_height     = &#39;アプリのウィンドウ高さ&#39;
def app_main_class = &#39;JavaFXのアプリケーションクラス&#39;

configurations { antfx }

...

dependencies {
    // 環境変数からJDKのロケーションを取得
    antfx files(&amp;quot;${project.property(&#39;org.gradle.java.home&#39;)}/lib/ant-javafx.jar&amp;quot;)
    // 依存ライブラリ
    compile ... 
}

task fx_deploy(dependsOn: &#39;classes&#39;) &amp;lt;&amp;lt; {
    def jar_dir  = &amp;quot;${buildDir}/libs&amp;quot;
    def jar_file = &amp;quot;${jar_dir}/${jar_name}-${version}.jar&amp;quot;

    def fx = NamespaceBuilder.newInstance(ant, &#39;javafx:com.sun.javafx.tools.ant&#39;)
    ant.taskdef(
            resource: &#39;com/sun/javafx/tools/ant/antlib.xml&#39;,
            uri: &#39;javafx:com.sun.javafx.tools.ant&#39;,
            // src/main/deploy をクラスパスに追加
            classpath: &#39;src/main/deploy:&#39; + configurations.antfx.asPath)

    fx.application(
            id: jar_name,
            name: app_name,
            version: version,
            mainClass: app_main_class)

    copy {
        into jar_dir
        from configurations.runtime
    }

    fx.jar(destfile: jar_file) {
        application(refid: jar_name)
        fileset(dir: &amp;quot;${buildDir}/resources/main&amp;quot;)
        fileset(dir: &amp;quot;${buildDir}/classes/main&amp;quot;)
        resources {
            fileset(dir: jar_dir)
        }
    }

    fx.deploy(
            outdir: distsDir,
            outfile: jar_name,
            width: app_width,
            height: app_height,
            nativeBundles: &#39;all&#39;,
            verbose: true) {
        application(refid: jar_name)
        resources {
            fileset(dir: jar_dir)
        }
        info(title: app_name, vendor: vender_name)
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;アプリやOSX用dmgのアイコン等のプラットフォーム固有のファイルは src/main/deploy/package/(macosx|windows) 以下に置いてください。&lt;/p&gt;

&lt;p&gt;後はタスクを実行するだけで、OSXならdmgファイル、Windowsならmsiファイル(WIXが必要) まで出来上がり。署名すれば、MacAppStore にも出せます。&lt;/p&gt;

&lt;p&gt;Androidアプリをデスクトップに移植とかしたい人はJavaFXを検討するのもいいかもしれません。&lt;/p&gt;

&lt;p&gt;ということで、ビルドしたアプリケーションは近日中に SYNCNEL Content Manager（仮名）としてリリース予定です！！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>