<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2016/07/06 on feedtailor Inc. スタッフブログ</title>
    <link>http://staff.feedtailor.jp/archives/2016/07/06/</link>
    <description>Recent content in 2016/07/06 on feedtailor Inc. スタッフブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 06 Jul 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://staff.feedtailor.jp/archives/2016/07/06/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>静的サイトジェネレータHugoを使ったサイト構築（テーマ編）</title>
      <link>http://staff.feedtailor.jp/2016/07/06/hugo_12</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://staff.feedtailor.jp/2016/07/06/hugo_12</guid>
      <description>

&lt;p&gt;こんにちは、tamaoki (&lt;a href=&#34;https://twitter.com/t0shiya&#34;&gt;@t0shiya&lt;/a&gt;) です。&lt;/p&gt;

&lt;p&gt;今回は、静的サイトジェネレータ &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; の &lt;strong&gt;テーマ（theme）&lt;/strong&gt;ついて。&lt;/p&gt;

&lt;p&gt;Hugoでは、WordPressや他のCMS、ブログと同じようにテーマを利用してデザインを変更できます。&lt;br /&gt;
また、自分で作成したレイアウトテンプレートや画像等をテーマとして纏めておくことで、コンテンツを変更することなくサイトのデザインを変更できるようになります。&lt;/p&gt;

&lt;p&gt;Hugoにはデフォルトのテーマがありませんので、新規サイト作成時にはお好みのテーマを選択して適用してください。テーマの適用後もデザインは自由にカスタマイズ可能です。&lt;/p&gt;

&lt;h2 id=&#34;インストール&#34;&gt;インストール&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Hugo themes&lt;/a&gt; というサイトにコミュニティで作られたテーマが多数公開されています。&lt;br /&gt;
各テーマは GitHub で公開されていますので、以下のように git コマンドでインストールしてください。「gitって何？」という方は後述の zip ファイルをダウンロードしてインストールすることもできます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;全てのテーマをインストール (git)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone --recursive https://github.com/spf13/hugoThemes.git themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;特定のテーマをインストール (git)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir themes
$ cd theme
$ git clone テーマのURL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;URLは&lt;a href=&#34;https://github.com/spf13/hugoThemes&#34;&gt;GitHubのリポジトリ&lt;/a&gt;からインストールしたいテーマを選択し、画面右上にある緑の &amp;ldquo;Clone or download&amp;rdquo; ボタンで表示できます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://staff.feedtailor.jp/images/2016/07/hugo_12_2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;特定のテーマをインストール (zip)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spf13/hugoThemes&#34;&gt;GitHubのリポジトリ&lt;/a&gt;からインストールしたテーマを選択し、画面右上にある緑の &amp;ldquo;Clone or download&amp;rdquo; ボタンから &amp;ldquo;Download ZIP&amp;rdquo; を実行してください。&lt;br /&gt;
config.toml と同じ階層に themes フォルダを作成し、ダウンロードしたzipファイルを展開します。
展開したフォルダは hugo-uno-4bc5f0c635995c55723284be3b0f826c86efdd13 のように末尾に長い英数字（gitのリビジョン）がついているので、最後の - 以降を削除（hugo-uno に名前を変更）します。&lt;/p&gt;

&lt;h2 id=&#34;テーマを適用する&#34;&gt;テーマを適用する&lt;/h2&gt;

&lt;p&gt;テーマを適用する方法は２つあります。一つがコマンドラインの引数、もう一つは設定ファイルで指定です。&lt;/p&gt;

&lt;p&gt;コマンドラインでは以下のように &amp;ldquo;-t テーマ名&amp;rdquo; を追加します。&lt;code&gt;hugo server&lt;/code&gt; コマンドでも同様です。テーマ名は themes フォルダ内にあるテーマのフォルダ名です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo -t テーマ名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定ファイルで指定する場合は config.toml に以下のように記述します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# config.toml
theme = &amp;quot;テーマ名&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;テーマをカスタマイズする&#34;&gt;テーマをカスタマイズする&lt;/h2&gt;

&lt;p&gt;テーマフォルダ（themes/テーマ名）内の構造はサイトと同様で layouts、static、archetypes フォルダがあります。&lt;/p&gt;

&lt;p&gt;カスタマイズしたい場合はテーマフォルダ内のファイルを直接変更するのではなく、変更したいファイルを対応するサイトのフォルダ（layouts等）にコピーして編集します。
例えば、themes/テーマ名/&lt;strong&gt;layouts/defaults/single.html&lt;/strong&gt; を変更したい場合は、&lt;strong&gt;layouts/defaults/single.html&lt;/strong&gt; にファイルをコピーして変更します。&lt;br /&gt;
staticやarchetypesフォルダ内のファイルも同様です。&lt;/p&gt;

&lt;h2 id=&#34;テーマを作成する&#34;&gt;テーマを作成する&lt;/h2&gt;

&lt;p&gt;新たにテーマを作成する時は以下のコマンドを使用するのが便利です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new theme テーマ名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コマンドを実行すると themes/テーマ名 フォルダにテーマのひな型が作成されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;themes/
└── テーマ名
    ├── LICENSE.md
    ├── archetypes
    │   └── default.md
    ├── layouts
    │   ├── 404.html
    │   ├── _default
    │   │   ├── list.html
    │   │   └── single.html
    │   ├── index.html
    │   └── partials
    │       ├── footer.html
    │       └── header.html
    ├── static
    │   ├── css
    │   └── js
    └── theme.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;先ほどの layouts、static、archetypes フォルダとtheme.toml、各フォルダにはダミーのファイルやフォルダ（archetypes/default.md, static/css &amp;hellip;）が生成されますのでそれらを変更するのが良いでしょう。&lt;/p&gt;

&lt;p&gt;theme.toml には作者やライセンス、config.toml に記載する設定のサンプル等を記載します。ページ生成には影響しません。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/themes/creation/&#34;&gt;http://gohugo.io/themes/creation/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://www.feedtailor.jp&#34;&gt;feedtailor&lt;/a&gt; では、静的サイトジェネレータの利用に限らず、ウェブサイト静的化の御相談を承っておりますのでお気軽に&lt;a href=&#34;http://www.feedtailor.jp/form/&#34;&gt;お問い合わせ&lt;/a&gt;ください。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>