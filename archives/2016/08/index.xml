<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2016/08 on feedtailor Inc. スタッフブログ</title>
    <link>http://staff.feedtailor.jp/archives/2016/08/</link>
    <description>Recent content in 2016/08 on feedtailor Inc. スタッフブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 19 Aug 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://staff.feedtailor.jp/archives/2016/08/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>静的サイトジェネレータHugoを使ったサイト構築（WordPressからの移行編１）</title>
      <link>http://staff.feedtailor.jp/2016/08/19/hugo_17</link>
      <pubDate>Fri, 19 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://staff.feedtailor.jp/2016/08/19/hugo_17</guid>
      <description>

&lt;p&gt;こんにちは、tamaoki (&lt;a href=&#34;https://twitter.com/t0shiya&#34;&gt;@t0shiya&lt;/a&gt;) です。&lt;br /&gt;
今回は、 &lt;a href=&#34;http://wordpress.org&#34;&gt;WordPress&lt;/a&gt; から静的サイトジェネレータ &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; への移行について。&lt;/p&gt;

&lt;p&gt;当ブログは開設当初からずっと WordPress で運営していたのですが、今年に入ってから Hugo に移行しました。&lt;br /&gt;
今回はその時の作業内容を元に、移行手順を簡単にご説明します。&lt;/p&gt;

&lt;p&gt;ざっくり言うと以下のような内容です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;投稿の移行&lt;/li&gt;
&lt;li&gt;テーマの適用&lt;/li&gt;
&lt;li&gt;リダイレクトの設定&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;投稿の移行&#34;&gt;投稿の移行&lt;/h3&gt;

&lt;p&gt;WordPressの投稿データからHugo用のMarkdownファイルへの変換は、WordPressのプラグイン &lt;a href=&#34;https://github.com/SchumacherFM/wordpress-to-hugo-exporter&#34;&gt;wordpress-to-hugo-exporter&lt;/a&gt; を使用しました。&lt;br /&gt;
Hugoのオフィシャルサイトでも紹介されているプラグインで、投稿、固定ページやタグ等のメタデータ諸々を１クリックでエクスポートできます。&lt;/p&gt;

&lt;p&gt;インストールは簡単で、&lt;a href=&#34;https://github.com/SchumacherFM/wordpress-to-hugo-exporter&#34;&gt;Github&lt;/a&gt;からgit cloneまたはzip形式でダウンロードしたフォルダをwp-content/pluginsフォルダに置き、WordPressの管理メニューでプラグインを有効化するだけです。&lt;/p&gt;

&lt;p&gt;有効化するとツールメニューの下に &amp;ldquo;Export to Hugo&amp;rdquo; と言うサブメニューが追加されます。このメニューを選択しても管理画面などはなく、すぐにコンテンツと画像を含むzipファイルの生成とダウンロードが始まります。数分かかる場合もあるので注意してください。&lt;/p&gt;

&lt;p&gt;エクスポートの作業自体はこれだけなのですが、幾つか調整したい事項があったので少しだけプラグインに手を入れました。変更内容は後述します。&lt;/p&gt;

&lt;p&gt;ダウンロードした hugo-export.zip の内容は以下のようになっています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo-export
├── config.yaml
├── post
│   ├── 2014-04-17-投稿タイトル.md
│   ├── 2014-04-18-投稿タイトル2.md
│   ├── 2014-04-24-投稿タイトル3.md
│   └── ....
└── wp-content
    └── uploads
        └── 2014
            └── 04
                └── 画像.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;config.yaml は url、name、description しか記載されていないので新たに作成しても良いでしょう。&lt;br /&gt;
wp-content/uploads 配下は、WordPressにアップロードしたファイルがそのまま含まれています。移行先のHugoサイトのstaticにコピーしてください。&lt;/p&gt;

&lt;p&gt;肝心のコンテンツですが、ファイル名に日本語が含まれていたり、フロントマターの項目が少なかったりしたので以下の改修を行いました。&lt;/p&gt;

&lt;h4 id=&#34;コンテンツファイル名の変更&#34;&gt;コンテンツファイル名の変更&lt;/h4&gt;

&lt;p&gt;ファイル名に日本語の投稿名がそのまま入っているため、ファイル名が長すぎてzip解凍に失敗したので、プラグインを変更してファイル名を 年-月-日-投稿ID.md に変更しました。&lt;/p&gt;

&lt;p&gt;変更したのは hugo-export.php の &lt;code&gt;function write($output, $post)&lt;/code&gt; です。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$filename = $this-&amp;gt;post_folder . date(&#39;Y-m-d&#39;, strtotime($post-&amp;gt;post_date)) . &#39;-&#39; . urldecode($post-&amp;gt;post_name) . &#39;.md&#39;;

// 上の行を以下に変更

$filename = $this-&amp;gt;post_folder . date(&#39;Y-m-d&#39;, strtotime($post-&amp;gt;post_date)) . &#39;-&#39; . $post-&amp;gt;ID . &#39;.md&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;フロントマターの追加&#34;&gt;フロントマターの追加&lt;/h4&gt;

&lt;p&gt;エクスポートしたコンテンツを見ると、フロントマターは以下のようになっていました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: feedtailor スタッフブログを始めます
author: oishi
layout: post
date: 2014-04-17
categories:
  - 全般
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;パーマリンクを個別指定している場合は url パラメータもつくようです。&lt;/p&gt;

&lt;p&gt;標準で追加される項目以外に、WordPress投稿IDやバナー画像、&lt;a href=&#34;http://staff.feedtailor.jp/2016/08/10/hugo_16&#34;&gt;アーカイブ編&lt;/a&gt; でご紹介した archives パラメータも移行したかったため、フロントマターに出力するよう変更しました。&lt;/p&gt;

&lt;p&gt;変更したのは hugo-export.php の &lt;code&gt;function convert_meta($post)&lt;/code&gt; です。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// 投稿日
$unixTime = strtotime($post-&amp;gt;post_date_gmt);
// banner画像の取得
preg_match(&amp;quot;/(?&amp;lt;=src=[&#39;|\&amp;quot;])[^&#39;|\&amp;quot;]*?(?=[&#39;|\&amp;quot;])/i&amp;quot;, get_the_post_thumbnail($post-&amp;gt;ID), $match);
$banner = $match[0];
        
$output = array(
    &#39;title&#39;  =&amp;gt; html_entity_decode(get_the_title($post)),
    &#39;author&#39; =&amp;gt; get_userdata($post-&amp;gt;post_author)-&amp;gt;display_name,
    &#39;layout&#39; =&amp;gt; get_post_type($post),
    &#39;date&#39;   =&amp;gt; $this-&amp;gt;_getPostDateAsIso($post),
    // 追加した項目
    &#39;post_id&#39; =&amp;gt; $post-&amp;gt;ID,
    &#39;banner&#39; =&amp;gt; $banner,
    &#39;archives&#39; =&amp;gt; array(date(&#39;Y&#39;, $unixTime), date(&#39;Y/m&#39;, $unixTime), date(&#39;Y/m/d&#39;, $unixTime)),
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;その他にも出力したい項目があれば $output に追加してください。&lt;/p&gt;

&lt;h4 id=&#34;markdownのリンクを変更&#34;&gt;Markdownのリンクを変更&lt;/h4&gt;

&lt;p&gt;また、リンクの記法が以下のような参照リンクとして段落外に書かれていたため、直接URLを指定するように変更しました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[feedtailor サイト][1]

[1]： http://www.feedtailor.jp/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これは &lt;code&gt;function convert_content($post)&lt;/code&gt; の &lt;code&gt;Markdownify\ConverterExtra&lt;/code&gt; の引数を変更するだけです。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$converter = new Markdownify\ConverterExtra;

// 上の行を以下に変更

$converter = new Markdownify\ConverterExtra(2);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;プラグインの改修は以上です。&lt;br /&gt;
コンテンツをエクスポートしてHugoサイトに組み込んでください。&lt;/p&gt;

&lt;p&gt;テーマの適用とリダイレクト設定の作業内容についてはまた改めてご紹介します。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://www.feedtailor.jp&#34;&gt;feedtailor&lt;/a&gt; では、静的サイトジェネレータの利用に限らず、ウェブサイト静的化の御相談を承っておりますのでお気軽に&lt;a href=&#34;http://www.feedtailor.jp/form/&#34;&gt;お問い合わせ&lt;/a&gt;ください。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>静的サイトジェネレータHugoを使ったサイト構築（アーカイブ編）</title>
      <link>http://staff.feedtailor.jp/2016/08/10/hugo_16</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://staff.feedtailor.jp/2016/08/10/hugo_16</guid>
      <description>

&lt;p&gt;こんにちは、tamaoki (&lt;a href=&#34;https://twitter.com/t0shiya&#34;&gt;@t0shiya&lt;/a&gt;) です。&lt;br /&gt;
今回は、静的サイトジェネレータ &lt;a href=&#34;http://gohugo.io&#34;&gt;Hugo&lt;/a&gt; の &lt;strong&gt;アーカイブページ&lt;/strong&gt; について。&lt;/p&gt;

&lt;p&gt;WordPress 等の CMS で記事を投稿すると自動的に日付に応じたアーカイブページが生成されたりしますが、Hugo にはそのような機構は用意されていません。&lt;br /&gt;
以下では、当ブログで使用している年／月／日のアーカイブページの生成方法をご紹介します。&lt;/p&gt;

&lt;h3 id=&#34;概要&#34;&gt;概要&lt;/h3&gt;

&lt;p&gt;当ブログでは、年／月／日アーカイブページのURLをそれぞれ以下のように設定しています。&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;&lt;th&gt;年別アーカイブ&lt;/th&gt;&lt;td&gt;http://staff.feedtailor.jp/archives/2016/&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;月別アーカイブ&lt;/th&gt;&lt;td&gt;http://staff.feedtailor.jp/archives/2016/08/&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;日別アーカイブ&lt;/th&gt;&lt;td&gt;http://staff.feedtailor.jp/archives/2016/08/10/&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Hugo では、タグやカテゴリ等、特定の条件に一致するコンテンツのリストページ生成に Taxonomy を使用するのが一般的ですので、
この機能を利用して年／月／日のアーカイブページを作成します。&lt;/p&gt;

&lt;p&gt;ざっくり言うとコンテンツの &amp;ldquo;archives&amp;rdquo; という Taxonomy に &amp;ldquo;2016&amp;rdquo;, &amp;ldquo;2016/08&amp;rdquo;, &amp;ldquo;2016/08/10&amp;rdquo; を指定すれば良いです。&lt;/p&gt;

&lt;h3 id=&#34;taxonomyの登録&#34;&gt;Taxonomyの登録&lt;/h3&gt;

&lt;p&gt;まず config.toml に Taxonomy を登録します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[taxonomies]
  tag = &amp;quot;tags&amp;quot;
  category = &amp;quot;categories&amp;quot;
  archive = &amp;quot;archives&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://staff.feedtailor.jp/2016/06/29/hugo_11&#34;&gt;Taxonomy編&lt;/a&gt; で説明したように、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;左辺（Singular）の &amp;ldquo;archive&amp;rdquo; が、リストページのテンプレートファイル名&lt;/li&gt;
&lt;li&gt;右辺（Plural）の &amp;ldquo;archives&amp;rdquo; が、コンテンツのフロントマターで登録する値＝URLのパスになる値&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;です。&lt;/p&gt;

&lt;h3 id=&#34;レイアウトの作成&#34;&gt;レイアウトの作成&lt;/h3&gt;

&lt;p&gt;次にアーカイブページのレイアウトテンプレートを用意します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://staff.feedtailor.jp/2016/06/29/hugo_11&#34;&gt;Taxonomy編&lt;/a&gt; で説明したように、以下の順に検索されます。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;/layouts/taxonomy/&lt;em&gt;SINGULAR&lt;/em&gt;.html&lt;/li&gt;
&lt;li&gt;/layouts/_default/taxonomy.html&lt;/li&gt;
&lt;li&gt;/layouts/_default/list.html&lt;/li&gt;
&lt;li&gt;/themes/THEME/layouts/taxonomy/&lt;em&gt;SINGULAR&lt;/em&gt;.html&lt;/li&gt;
&lt;li&gt;/themes/THEME/layouts/_default/taxonomy.html&lt;/li&gt;
&lt;li&gt;/themes/THEME/layouts/_default/list.html&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;前述の config.toml の設定では左辺が archive でしたので、上の 1 は &lt;code&gt;/layout/taxonomy/archive.html&lt;/code&gt; となります。&lt;/p&gt;

&lt;p&gt;以下はテンプレートの例です。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h3&amp;gt;アーカイブ：{{ .Title }}&amp;lt;/h3&amp;gt;
&amp;lt;/pre&amp;gt;
{{ range .Data.Pages }}
&amp;lt;li&amp;gt;
    &amp;lt;div class=&amp;quot;date&amp;quot;&amp;gt;{{ .Date.Format &amp;quot;2006.01.02 (Mon)&amp;quot; }}&amp;lt;/div&amp;gt;
    &amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;
&amp;lt;/li&amp;gt;
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Term （フロントマターで指定した値 &amp;ldquo;2016&amp;rdquo;や&amp;rdquo;2016/08&amp;rdquo;）は変数 &lt;code&gt;.Title&lt;/code&gt; に格納されています。&lt;br /&gt;
年／月／日で表示を変えたい場合は、次のように &lt;code&gt;.Title&lt;/code&gt; の文字列長で分岐させるか、SINGULAR をそれぞれ year, month, date 等に分けてください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h3&amp;gt;
    {{ if eq 4 (len .Title) }}年別：{{ else if eq 7 (len .Title) }}月別：{{ else if eq 10 (len .Title) }}日別：{{ end }}{{ .Title }}
&amp;lt;/h3&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;フロントマターの設定&#34;&gt;フロントマターの設定&lt;/h3&gt;

&lt;p&gt;最後にコンテンツをどのページにリストアップするかを指定します。&lt;/p&gt;

&lt;p&gt;例えば、本エントリの日付は 2016年8月10日ですので、&amp;rdquo;2016&amp;rdquo;, &amp;ldquo;2016/08&amp;rdquo;, &amp;ldquo;2016/08/10&amp;rdquo; の３つのアーカイブページにリストアップしたいとします。&lt;br /&gt;
その場合は、フロントマターに以下を追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# フロントマター（YAML形式）の場合
archives:
  - 2016
  - 2016/08
  - 2016/08/10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;毎回 archives を設定するのは手間ですので、archetypes に空の値を３つ登録しておくのも良いかもしれません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# archetypes/post.md
archives:
  - &amp;quot;&amp;quot;
  - &amp;quot;&amp;quot;
  - &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上で、アーカイブページの生成されコンテンツがリストアップされます。コンテンツを追加する際にはフロントマターに指定するだけでOKです。&lt;/p&gt;

&lt;p&gt;応用するとHugoでも様々なアーカイブページを生成することができますので、WordPress からの移行等でアーカイブページが自動生成されなくて困っていたり、リストページを充実させたい方は、是非お試しください。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://www.feedtailor.jp&#34;&gt;feedtailor&lt;/a&gt; では、静的サイトジェネレータの利用に限らず、ウェブサイト静的化の御相談を承っておりますのでお気軽に&lt;a href=&#34;http://www.feedtailor.jp/form/&#34;&gt;お問い合わせ&lt;/a&gt;ください。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>